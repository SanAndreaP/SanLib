package dev.sanandrea.mods.sanlib.network;

import dev.sanandrea.mods.sanlib.Constants;
import dev.sanandrea.mods.sanlib.lib.network.SimpleMessage;
import io.netty.buffer.ByteBuf;
import net.minecraft.client.Minecraft;
import net.minecraft.network.codec.ByteBufCodecs;
import net.minecraft.network.codec.StreamCodec;
import net.minecraft.network.protocol.common.custom.CustomPacketPayload;
import net.minecraft.resources.ResourceLocation;
import net.neoforged.api.distmarker.Dist;
import net.neoforged.api.distmarker.OnlyIn;
import net.neoforged.neoforge.network.handling.IPayloadContext;
import org.jetbrains.annotations.NotNull;
import dev.sanandrea.mods.sanlib.client.TestGui;

public record OpenTestGUI(boolean open)
        implements SimpleMessage<OpenTestGUI>
{
    public static final Type<OpenTestGUI> TYPE = new Type<>(ResourceLocation.fromNamespaceAndPath(Constants.ID, "open_test_gui"));

    public static final StreamCodec<ByteBuf, OpenTestGUI> STREAM_CODEC = StreamCodec.composite(
            ByteBufCodecs.BOOL,
            OpenTestGUI::open,
            OpenTestGUI::new
    );

    public OpenTestGUI() {
        this(true);
    }

    @Override
    public @NotNull Type<? extends CustomPacketPayload> type() {
        return TYPE;
    }

    @Override
    @OnlyIn(Dist.CLIENT)
    public void handleOnMainClient(IPayloadContext context) {
        Minecraft.getInstance().mouseHandler.releaseMouse();
        Minecraft.getInstance().setScreen(new TestGui());
    }
}
